#!/usr/bin/env bash

set -euo pipefail

(
    for x in "$WD/src/com"/*.hs; do
        (
            hlint "$x"
            ormolu -m inplace "$x"
        ) &
    done
    clang-format -i -verbose "$WD/src/vm/"* &
    for _ in $(jobs -p); do
        wait -n
    done
)
(
    flags=(
        "-fdiagnostics-color=always"
        -funbox-strict-fields
        "-i$WD/src/com"
        -O
        "-optl -fuse-ld=lld"
        "-outputdir $WD/build"
        -Wall
        -Wcompat
        -Werror
        -Widentities
        -Wincomplete-record-updates
        -Wincomplete-uni-patterns
        -with-rtsopts "-A8m"
        -Wmonomorphism-restriction
        -Wpartial-fields
        -Wredundant-constraints
        -Wunused-packages
        -Wunused-type-patterns
    )
    ghc "${flags[@]}" -o "$WD/bin/com" "$WD/src/com/Main.hs"
)
(
    flags=(
        "-ferror-limit=1"
        -ffast-math
        -fno-autolink
        -fno-exceptions
        -fno-math-errno
        -fno-omit-frame-pointer
        -fno-rtti
        -fno-unwind-tables
        "-fsanitize=address"
        "-fsanitize=undefined"
        -fshort-enums
        "-march=native"
        -O1
        "-std=c++11"
        -Werror
        -Weverything
        -Wno-c++98-compat-pedantic
        -Wno-covered-switch-default
        -Wno-extra-semi-stmt
        -Wno-padded
        -Wno-reserved-id-macro
    )
    mold -run clang++ "${flags[@]}"  -o "$WD/bin/vm" "$WD/src/vm/main.cpp"
)
(
    python3 "$WD/src/test/main.py"
)
